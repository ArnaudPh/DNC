stages:
  - make
  - build

# Fragment : Docker build.
.build:docker: &docker_build
  image: docker:latest
  services:
    - name: docker:dind
  script:
    # Login in the registry
    - docker login -u $REGISTRY_USER -p $REGISTRY_TOKEN $REGISTRY_URL
    # Build image
    - docker build -t $REGISTRY_URL/$REGISTRY_NAMESPACE/$IMAGE_NAME:$CI_COMMIT_REF_SLUG -f $DOCKERFILE .
    # Push image
    - docker push $REGISTRY_URL/$REGISTRY_NAMESPACE/$IMAGE_NAME:$CI_COMMIT_REF_SLUG

# ==== TEST & MAKE ====
# This job runs on merge requests.
# It also builds the package and exports it as an artifact.
# - Install package dependencies
# - Lint the code
# - Run unit tests
# - Build package
test_make_app:
  stage: make
  image: node:10.12.0
  script:
    # Install yarn
    - npm install -g yarn
    # Install dev dependencies to compile project
    - yarn install
    # Lint code
    - yarn lint
    # Run unit tests
    - yarn test
    # Build package
    - yarn build
  artifacts:
    # Add the build as an artifact
    paths:
      - .dist/
      - Dockerfile
    expire_in: 2 hrs

# ==== MAKE STORYBOOK ====
# This job make builds storybook.
# - Install package dependencies
# - Build package
# - Upload package as an artifact
make_storybook:
  stage: make
  image: node:10.12.0
  script:
    # Install yarn
    - npm install -g yarn
    # Install dev dependencies to compile project
    - yarn install
    # Build package
    - yarn storybook:build
  artifacts:
    # Add the build as an artifact
    paths:
      - storybook-static/
      - Dockerfile
    expire_in: 2 hrs
  only:
    - develop

# ==== BUILD APP FROM BRANCH ====
build_branch:
  stage: build
  dependencies:
    # Download artifacts from previous build
    - test_make_app
  variables:
    IMAGE_NAME: front
    DOCKERFILE: Dockerfile
  environment:
    name: $CI_COMMIT_REF_SLUG
  only:
    - develop
    - staging
  except:
    - tags
  <<: *docker_build

# ==== BUILD STORYBOOK ====
build_storybook:
  stage: build
  dependencies:
    # Download artifacts from previous build
    - make_storybook
  variables:
    IMAGE_NAME: storybook
    DOCKERFILE: storybook.Dockerfile
  environment:
    name: storybook
  only:
    - develop
  <<: *docker_build
