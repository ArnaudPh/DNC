<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>fr.gouv.modernisation.dinum.dnc</groupId>
		<artifactId>back-core</artifactId>
		<version>1.0-SNAPSHOT</version>
	</parent>

	<artifactId>situation-usager-ms</artifactId>
	<version>1.0-SNAPSHOT</version>
	<name>situation-usager-ms</name>
	<description>Microservice qui permet de récupérer les données d'utilisateur chez les FDs dans une vue 360</description>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>11</java.version>
		<base.package>fr.gouv.modernisation.dinum.dnc.situationusager</base.package>
		<client.base.package>fr.gouv.modernisation.dinum.dnc.client</client.base.package>
	</properties>

	<dependencies>
		<dependency>
			<groupId>fr.gouv.modernisation.dinum.dnc</groupId>
			<artifactId>common-ms</artifactId>
		</dependency>

	    <dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-redis</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-pool2</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-config</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-log4j2</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-activemq</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.activemq</groupId>
			<artifactId>activemq-broker</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
		</dependency>

		<!-- Génération des justificatifs-->
		<dependency>
			<groupId>net.sf.jasperreports</groupId>
			<artifactId>jasperreports</artifactId>
			<version>6.12.2</version>
		</dependency>
		<dependency>
			<groupId>net.sf.jasperreports</groupId>
			<artifactId>jasperreports-fonts</artifactId>
			<version>6.12.2</version>
		</dependency>
		<dependency>
			<groupId>net.sf.jasperreports</groupId>
			<artifactId>jasperreports-functions</artifactId>
			<version>6.12.2</version>
		</dependency>
		<dependency>
			<groupId>org.apache.xmlgraphics</groupId>
			<artifactId>batik-bridge</artifactId>
			<version>1.12</version>
		</dependency>
		<dependency>
			<groupId>org.apache.xmlgraphics</groupId>
			<artifactId>batik-ext</artifactId>
			<version>1.12</version>
		</dependency>
		<dependency>
			<groupId>xml-apis</groupId>
			<artifactId>xml-apis-ext</artifactId>
			<version>1.3.04</version>
		</dependency>
		<dependency>
			<groupId>org.jfree</groupId>
			<artifactId>org.jfree.svg</artifactId>
			<version>4.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.xmlgraphics</groupId>
			<artifactId>batik-codec</artifactId>
			<version>1.13</version>
		</dependency>


		<!-- QR Code-->
		<dependency>
			<groupId>com.google.zxing</groupId>
			<artifactId>core</artifactId>
			<version>3.4.0</version>
		</dependency>
		<dependency>
			<groupId>com.google.zxing</groupId>
			<artifactId>javase</artifactId>
			<version>3.4.0</version>
		</dependency>



		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.meanbean</groupId>
			<artifactId>meanbean</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- Dépendances pour le code générés-->
		<!-- dependencies are needed for the client being generated -->
		<dependency>
			<groupId>io.swagger</groupId>
			<artifactId>swagger-annotations</artifactId>
		</dependency>
		<dependency>
			<groupId>io.swagger.core.v3</groupId>
			<artifactId>swagger-annotations</artifactId>
			<version>${swagger-v3-annotations.version}</version>
		</dependency>

		<!--RestAssured-->
		<dependency>
			<groupId>io.rest-assured</groupId>
			<artifactId>rest-assured</artifactId>
			<version>${rest-assured.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.rest-assured</groupId>
			<artifactId>json-path</artifactId>
			<version>${rest-assured.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.rest-assured</groupId>
			<artifactId>json-schema-validator</artifactId>
			<version>${rest-assured.version}</version>
			<scope>test</scope>
		</dependency>
		<!-- Wiremock-->
		<dependency>
			<groupId>com.github.tomakehurst</groupId>
			<artifactId>wiremock</artifactId>
			<version>2.26.3</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>junit</groupId>
					<artifactId>junit</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- Redis embarqué pour les tests-->
		<dependency>
			<groupId>it.ozimov</groupId>
			<artifactId>embedded-redis</artifactId>
			<version>0.7.2</version>
			<scope>test</scope>
		</dependency>
		<!-- Donnnées aléatoires -->
		<dependency>
			<groupId>com.github.javafaker</groupId>
			<artifactId>javafaker</artifactId>
			<version>1.0.2</version>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>


			<plugin>
				<groupId>com.alexnederlof</groupId>
				<artifactId>jasperreports-plugin</artifactId>
				<version>2.7</version>
				<executions>
					<execution>
						<phase>process-sources</phase>
						<goals>
							<goal>jasper</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<compiler>net.sf.jasperreports.engine.design.JRJdtCompiler</compiler>
					<sourceDirectory>${project.basedir}/src/main/resources/justificatifs</sourceDirectory>
					<outputDirectory>${project.build.directory}/classes/justificatifs/reports</outputDirectory>
					<outputFileExt>.jasper</outputFileExt>
					<xmlValidation>true</xmlValidation>
					<verbose>false</verbose>
					<numberOfThreads>4</numberOfThreads>
					<failOnMissingSourceDirectory>true</failOnMissingSourceDirectory>
					<sourceScanner>org.codehaus.plexus.compiler.util.scan.StaleSourceScanner</sourceScanner>
				</configuration>
			</plugin>


			<!-- Swagger Code Generator -->
			<plugin>
				<groupId>io.swagger.codegen.v3</groupId>
				<artifactId>swagger-codegen-maven-plugin</artifactId>
				<version>${swagger-codegen-maven-plugin-v3.version}</version>
				<executions>
					<!--Génération pour DGFIP/CNAF-->
					<execution>
						<id>Generation_Client_Particulier_Open_DGFIP_CNAF</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<inputSpec>${project.basedir}/src/main/resources/particulier-api-gouv-open-api-dgfip.yaml</inputSpec>
							<output>${project.build.directory}/generated-sources</output>
							<modelPackage>${base.package}.generated.api.model</modelPackage>
							<apiPackage>${client.base.package}.particulier.open.generated.api.client</apiPackage>
							<invokerPackage>${client.base.package}.particulier.open.generated.api.invoker</invokerPackage>
							<generateApis>true</generateApis>
							<generateModels>true</generateModels>
							<generateSupportingFiles>true</generateSupportingFiles>
							<generateModelDocumentation>false</generateModelDocumentation>
							<generateApiDocumentation>true</generateApiDocumentation>
							<generateApiTests>false</generateApiTests>
							<generateModelTests>false</generateModelTests>
							<language>java</language>
							<library>resttemplate</library>
							<configOptions>
								<dateLibrary>java8</dateLibrary>
								<sourceFolder>src/gen/java</sourceFolder>
								<serializableModel>true</serializableModel>
							</configOptions>
						</configuration>
					</execution>
					<!--Génération pour CNAM-->
					<execution>
						<id>Generation_Client_AssuranceMalaide_Open_CNAM</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<inputSpec>${project.basedir}/src/main/resources/assurance-maladie-open-api-cnam.yaml</inputSpec>
							<output>${project.build.directory}/generated-sources</output>
							<modelPackage>${base.package}.generated.api.model</modelPackage>
							<apiPackage>${client.base.package}.cnam.open.generated.api.client</apiPackage>
							<invokerPackage>${client.base.package}.cnam.open.generated.api.invoker</invokerPackage>
							<generateApis>true</generateApis>
							<generateModels>true</generateModels>
							<generateSupportingFiles>true</generateSupportingFiles>
							<generateModelDocumentation>false</generateModelDocumentation>
							<generateApiDocumentation>true</generateApiDocumentation>
							<generateApiTests>false</generateApiTests>
							<generateModelTests>false</generateModelTests>
							<language>java</language>
							<library>resttemplate</library>
							<configOptions>
								<dateLibrary>java8</dateLibrary>
								<sourceFolder>src/gen/java</sourceFolder>
								<serializableModel>true</serializableModel>
							</configOptions>
						</configuration>
					</execution>

					<execution>
						<id>Generation_Service_SituationUsagerMS</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<inputSpec>${project.basedir}/src/main/resources/situationUsager-ms-opanapi3.yaml</inputSpec>
							<output>${project.build.directory}/generated-sources</output>
							<modelPackage>${base.package}.generated.api.model</modelPackage>
							<apiPackage>${base.package}.generated.api.server</apiPackage>
							<invokerPackage>${base.package}.generated.api.invoker</invokerPackage>
							<generateApis>true</generateApis>
							<generateModels>true</generateModels>
							<generateSupportingFiles>false</generateSupportingFiles>
							<generateModelDocumentation>true</generateModelDocumentation>
							<generateApiDocumentation>true</generateApiDocumentation>
							<generateApiTests>false</generateApiTests>
							<generateModelTests>false</generateModelTests>
							<language>spring</language>
							<configOptions>
								<dateLibrary>java8</dateLibrary>
								<sourceFolder>src/gen/java</sourceFolder>
								<serializableModel>true</serializableModel>
							</configOptions>
						</configuration>
					</execution>

					<execution>
						<id>Generation_Service_SituationUsagerMS_embedded_partenaire</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<inputSpec>${project.basedir}/src/main/resources/embedded-partenaire-swagger2.yaml</inputSpec>
							<output>${project.build.directory}/generated-sources</output>
							<modelPackage>${base.package}.generated.api.model</modelPackage>
							<apiPackage>${base.package}.generated.api.server.partenaire</apiPackage>
							<generateApis>true</generateApis>
							<generateModels>true</generateModels>
							<generateSupportingFiles>false</generateSupportingFiles>
							<generateModelDocumentation>true</generateModelDocumentation>
							<generateApiDocumentation>true</generateApiDocumentation>
							<generateApiTests>false</generateApiTests>
							<generateModelTests>false</generateModelTests>
							<language>spring</language>
							<configOptions>
								<dateLibrary>java8</dateLibrary>
								<sourceFolder>src/gen/java</sourceFolder>
								<serializableModel>true</serializableModel>
							</configOptions>
						</configuration>
					</execution>

					<execution>
						<id>Generation_Service_SituationUsagerMS_embedded_meta</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<inputSpec>${project.basedir}/src/main/resources/embedded-ms-openapi3.yaml</inputSpec>
							<output>${project.build.directory}/generated-sources</output>
							<modelPackage>${base.package}.generated.api.model</modelPackage>
							<apiPackage>${base.package}.generated.api.server.embedded</apiPackage>
							<generateApis>true</generateApis>
							<generateModels>true</generateModels>
							<modelsToGenerate>MetaDonnees,Etape</modelsToGenerate>
							<generateSupportingFiles>false</generateSupportingFiles>
							<generateModelDocumentation>true</generateModelDocumentation>
							<generateApiDocumentation>true</generateApiDocumentation>
							<generateApiTests>false</generateApiTests>
							<generateModelTests>false</generateModelTests>
							<language>spring</language>
							<configOptions>
								<dateLibrary>java8</dateLibrary>
								<sourceFolder>src/gen/java</sourceFolder>
								<serializableModel>true</serializableModel>
							</configOptions>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
